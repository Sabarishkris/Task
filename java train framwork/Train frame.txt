

import java.awt.*;
import javax.swing.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class TrainGUI implements ActionListener
{

    public static void main(String[] args)
    {
        JFrame frame = new JFrame("Train Scheduler");
        frame.setSize(800, 400);

        //frame.setLayout(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Create JPanel
        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));


        // Create JButton
        JButton button = new JButton("Submit");

        // Create JTextField
        JTextField textField1 = new JTextField(10);
        JTextField textField2 = new JTextField(10);
        JTextField textField3 = new JTextField(40);
        JTextField textField4 = new JTextField(40);
        JTextField textField5 = new JTextField(10);
        JTextField textField6 = new JTextField(10);
        JTextField textField7 = new JTextField(40);
        JTextField textField8 = new JTextField(40);


        // Create JLabel
        JLabel label0 = new JLabel("Enter A -- B station schedule");

        JLabel label1 = new JLabel("Enter  A1 Departure:");
        JLabel label2 = new JLabel("Enter  Station B Arrival :");
        JLabel label3 = new JLabel("Enter A2 Departure:");
        JLabel label4 = new JLabel("Enter Station B Arrival:");

        JLabel label00 = new JLabel("Enter  B -- A Station schedule");

        JLabel label5 = new JLabel("Enter  B1 Departure:");
        JLabel label6 = new JLabel("Enter Station A Arrival:");
        JLabel label7 = new JLabel("Enter B2 Departure :");
        JLabel label8 = new JLabel("Enter Station A Arrival:");


        String[][]tripsTimeA=new String[2][2];
        String[][]tripsTimeB=new String[2][2];

        // Add components to the panel
        frame.add(panel);
        panel.add(label0);
        panel.add(label1);
        panel.add(textField1);
        panel.add(label2);
        panel.add(textField2);
        panel.add(label3);
        panel.add(textField3);
        panel.add(label4);
        panel.add(textField4);
        panel.add(label00);
        panel.add(label5);
        panel.add(textField5);
        panel.add(label6);
        panel.add(textField6);
        panel.add(label7);
        panel.add(textField7);
        panel.add(label8);
        panel.add(textField8);

        panel.add(button);

        // Add panel to the frame
        frame.getContentPane().add(panel);

        // Button click event handling
        button.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
                tripsTimeA[0][0]=textField1.getText();
                tripsTimeA[0][1]=textField2.getText();
                tripsTimeA[1][0]=textField3.getText();
                tripsTimeA[1][1]=textField4.getText();

                tripsTimeB[0][0]=textField5.getText();
                tripsTimeB[0][1]=textField6.getText();
                tripsTimeB[1][0]=textField7.getText();
                tripsTimeB[1][1]=textField8.getText();

                for(String temp[]:tripsTimeA){
                    for (String temp1:temp){
                        System.out.println(temp1+" ");
                    }
                }

                for(String temp[]:tripsTimeB){
                    for (String temp1:temp){
                        System.out.println(temp1+" ");
                    }
                }
                int ans[]=findtrain(tripsTimeA,tripsTimeB);
                if(ans[0]<0 || ans[1]<0){
                    JOptionPane.showMessageDialog(frame, "Invalid input");
                }else JOptionPane.showMessageDialog(frame, "Total train need station A is  : " +ans[0] +" B is : "+ans[1]);
            }
        });

        // Set the frame to be visible
        frame.setVisible(true);
    }
    
    public static int count(List<Integer>arr1,List<Integer>arr2){
        if(arr2.isEmpty() ){
            return arr1.size();
        }
        int count=0;
        for(int i=0;i<arr1.size();i++) {
            if (Collections.min(arr2) < arr1.get(i)) {
                arr2.remove(Collections.min(arr2));
                continue;
            }
            if (!arr1.isEmpty() && !(Collections.min(arr2) < arr1.get(i))){
                count++;
            }
        }
        return count;
    }
    public static int correct(String s){
        int n1=0,n2=0;
        String[] n=s.split(":");
        if(n.length==2){
            try{
                n1=Integer.parseInt(n[0]);
                n2=Integer.parseInt(n[1]);
            }catch (NumberFormatException e){
                System.out.println("Invalid input Exception");
                return -1;
            }
            if(n1<0 || n1>23 || n2<0 || n2 >60){
                System.out.println("enter 1");
                return -1;
            }
            n1=n1*60;
            n2=n1+n2;
            return n2;
        }
        System.out.println("2");
        return -1;
    }
    public static List<Integer> check(String[][]arr,int index){
        List<Integer>ls=new ArrayList<>();
        for(int i=0;i< arr.length;i++){
            int crt=correct(arr[i][index]);
            if(crt==-1) {
                System.out.println("Invalid Input  check");
                System.exit(0);
            }
            ls.add(crt);
        }
        return ls;
    }
    public static int[] findtrain(String [][]a,String[][]b){
        int []ans=new int[2];
        List<Integer>aDeparture=check(a,0);
        List<Integer>aArrival=check(a,1);
        List<Integer>bDeparture=check(b,0);
        List<Integer>bArrival=check(b,1);
        ans[0]=count(aDeparture,bArrival);
        ans[1]=count(bDeparture,aArrival);
        return ans;
    }


    @Override
    public void actionPerformed(ActionEvent actionEvent) {
        
    }
}